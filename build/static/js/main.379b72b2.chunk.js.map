{"version":3,"sources":["components/Header/styles.js","components/Header/Header.js","components/Pin/pinStyles.js","components/Pin/index.js","components/Gallery/galleryStyles.js","components/Gallery/Gallery.js","data/imagedate.js","utility/baseUrl.js","globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","LogoWrapper","Buttons","HomeButton","HomeText","a","FollowButton","FollowText","SearchWrapper","SearchBarWrapper","IconWrapper","Header","onSearch","useState","Tinput","setTinput","IconButton","href","type","onChange","e","target","value","onClick","preventDefault","Container","Pin","img","effect","src","alt","Wrap","Wrappers","Containers","GalleryS","Imgdata","pins","className","map","data","index","link","ImageData","Img","axios","create","baseUrl","GlobalStyle","createGlobalStyle","App","setNewPins","useEffect","get","then","response","images","console","log","sort","b","Math","random","catch","error","term","params","query","getImages","res","results","newPins","Gallery","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.379b72b2.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 56px;\r\n  padding: 12px 4px 4px 16px;\r\n  background: white;\r\n  color: black;\r\n\r\n  @media all and (max-width:412px){\r\n    display:none;\r\n  }\r\n  @media all and (min-width:413px){\r\n    display:none;\r\n  }\r\n`;\r\n\r\nexport const LogoWrapper = styled.div`\r\n  .MuiSvgIcon-root {\r\n    color: red;\r\n    font-size: 22px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  height: 48px;\r\n  min-width: 123px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 24px;\r\n  cursor: pointer;\r\n`;\r\nexport const HomeButton = styled(Buttons)`\r\n\r\n  background-color: rgb(17, 17, 17);\r\n`;\r\n\r\nexport const HomeText = styled.a`\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const FollowButton = styled(Buttons)`\r\n  background-color: white;\r\n\r\n  :hover {\r\n    background: #e1e1e1;\r\n  }\r\n`;\r\nexport const FollowText = styled.a`\r\n  text-decoration: none;\r\n  color: black;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const SearchWrapper = styled.div`\r\nflex: 1;\r\n`;\r\n\r\nexport const SearchBarWrapper = styled.div`\r\nbackground-color:#efefef;\r\ndisplay:flex;\r\nheight: 48px;\r\nwidth:100%;\r\nborder-radius:50px;\r\nborder:none;\r\npadding-left: 10px;\r\n\r\nform {\r\n    display:flex;\r\n    flex: 1;\r\n}\r\n\r\nform > input {\r\n    background-color: transparent;\r\n    border:none;\r\n    outline:none;\r\n    margin-left: 5px;\r\n    font-size: 16px;\r\n}\r\n\r\nform > button {\r\n    display:none;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport const IconWrapper = styled.div``;\r\n","import React from \"react\";\r\nimport PinterestIcon from \"@material-ui/icons/Pinterest\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport {\r\n  Wrapper,\r\n  LogoWrapper,\r\n  HomeButton,\r\n  FollowButton,\r\n  SearchWrapper,\r\n  SearchBarWrapper,\r\n  IconWrapper,\r\n  HomeText,\r\n  FollowText,\r\n} from \"./styles\";\r\nimport { useState } from \"react\";\r\nconst Header = ({ onSearch }) => {\r\n  const [Tinput, setTinput] = useState(\"\");\r\n\r\n  const changeInput = (e) => {\r\n    setTinput(e.target.value);\r\n\r\n  };\r\n\r\n  const onsubmitButton = (e) => {\r\n    e.preventDefault();\r\n    onSearch(Tinput);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <LogoWrapper>\r\n        <IconButton>\r\n          <PinterestIcon />\r\n        </IconButton>\r\n      </LogoWrapper>\r\n      <HomeButton>\r\n        <HomeText href=\"/\">Homepage</HomeText>\r\n      </HomeButton>\r\n      <FollowButton>\r\n        <FollowText href=\"/\">Following</FollowText>\r\n      </FollowButton>\r\n      <SearchWrapper>\r\n        <SearchBarWrapper>\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n\r\n          <form>\r\n            <input type=\"text\" onChange={changeInput} />\r\n            <button type=\"submit\" onClick={onsubmitButton}></button>\r\n          </form>\r\n        </SearchBarWrapper>\r\n      </SearchWrapper>\r\n\r\n      <IconWrapper>\r\n        <IconButton>\r\n          <NotificationsIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <TextsmsIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <KeyboardArrowDownIcon />\r\n        </IconButton>\r\n      </IconWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: inline-flex;\r\npadding: 8px;\r\n\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  width: 236px;\r\n  justify-content: center;\r\n  img {\r\n    display: flex;\r\n    width: 100%;\r\n    border-radius: 16px;\r\n    object-fit: cover;\r\n    cursor: zoom-in;\r\n  }\r\n  @media all and (min-width: 300px) {\r\n    width: 280px;\r\n  }\r\n\r\n  @media all and (min-width: 350px) {\r\n    width: 285px;\r\n  }\r\n\r\n  @media all and (min-width: 360px) {\r\n    width: 100%;\r\n    max-height: 400px;\r\n    img {\r\n      height: 100%;\r\n    }\r\n  }\r\n  @media all and (min-width: 374px) {\r\n    width: 100%;\r\n    max-height: 400px;\r\n\r\n    img {\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  @media all and (min-width: 506px) {\r\n    width: 100%;\r\n    max-height: 400px;\r\n\r\n    img {\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n\r\n`;","import React from \"react\";\r\nimport { Wrapper, Container } from \"./pinStyles\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nconst Pin = ({ img }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <LazyLoadImage \r\n        effect=\"blur\"\r\n        src={img} alt=\"\" />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Pin;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\nwidth:100%;\r\nheight: 100%;\r\np{\r\n  color:red;\r\n  text-align:center;\r\n  margin-bottom: 20px;\r\n  margin-top: 50px;\r\n}\r\n`;\r\nexport const Wrappers = styled.div`\r\n  display: flex;\r\n  background-color: white;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media all and (max-width: 506px) {\r\n   text-align:center;\r\n  }\r\n  @media all and (min-width:506px){\r\n    \r\n  }\r\n`;\r\n\r\nexport const Containers = styled.div`\r\n  \r\n  margin-top: 15px;\r\n  background-color: white !important;\r\n  width: 100%;\r\n\r\n \r\n`;\r\n","import React from \"react\";\r\nimport Pin from \"../Pin\";\r\nimport { Wrappers, Containers, Wrap } from \"./galleryStyles\";\r\nimport './gallery.css'\r\nconst GalleryS = ({ Imgdata, pins }) => {\r\n  return (\r\n    <Wrap>\r\n    <p>joshua kimbareeba</p>\r\n     <Wrappers>\r\n   \r\n      <Containers className='galleryboard'>\r\n        {pins.map((data, index) => {\r\n          return <Pin key={index} img={data.link} />;\r\n        })}\r\n      </Containers>\r\n    </Wrappers>\r\n    </Wrap>\r\n   \r\n  );\r\n};\r\n\r\nexport default GalleryS;\r\n","\r\n\r\n\r\nexport const ImageData = [\r\n  {\r\n    Img: \"image1\",\r\n  },\r\n  {\r\n    Img: \"image2\",\r\n  },\r\n  {\r\n    Img: \"image3\",\r\n  },\r\n  {\r\n    Img: \"image4\",\r\n  },\r\n  {\r\n    Img: \"image5\",\r\n  },\r\n  {\r\n    Img: \"image6\",\r\n  },\r\n  {\r\n    Img: \"image7\",\r\n  },\r\n  {\r\n    Img: \"image8\",\r\n  },\r\n  {\r\n    Img: \"image9\",\r\n  },\r\n  {\r\n    Img: \"image10\",\r\n  },\r\n  {\r\n    Img: \"image11\",\r\n  },\r\n];","import axios from 'axios';\r\n\r\n// export default axios.create({\r\n//     baseUrl:'',\r\n//     headers: {\r\n//         Authorization: \"Client-ID AccessToken\"\r\n//     }\r\n// })\r\n\r\nexport default axios.create({\r\n  baseUrl: \"https://josh-imageserver.herokuapp.com/\",\r\n});","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Noto Sans', sans-serif;\r\n}\r\n\r\nhtml, body {\r\n    overflow-x: hidden;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import Header from \"./components/Header/Header\";\nimport GalleryS from \"./components/Gallery/Gallery\";\nimport { ImageData } from \"./data/imagedate\";\nimport baseUrl from \"../src/utility/baseUrl\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport GlobalStyle from \"./globalStyles\";\n\n\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n  const getImages = (term) => {\n    return baseUrl.get(\"\", {\n      params: {\n        query: term,\n      },\n    });\n  };\n  const onSearch = (term) => {\n    getImages(term).then((res) => {\n      let results = res.data.results;\n      let newPins = [...results, ...pins];\n\n      newPins.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      setNewPins(newPins);\n    });\n  };\n\n  // const getNewPins = () => {\n  //   let promises = [];\n  //   let pinData = [];\n  //   //selection of different pin data\n  //   let pins = [\"cars\", \"professional\", \"all\"];\n\n  //   pins.forEach((category) => {\n  //     promises.push(\n  //       getImages(category).then((res) => {\n  //         let results = res.data.results;\n\n  //         pinData = pinData.concat(results);\n\n  //         pinData.sort(function (a, b) {\n  //           return 0.5 - Math.random();\n  //         });\n  //       })\n  //     );\n  //   });\n  //   Promise.all(promises).then(()=>{\n  //     setNewPins(pinData);\n  //   })\n  // };\n\n  // const getNewPins = () => {\n  //   let images = ImageData;\n\n  //   images.sort((a, b) => {\n  //     return 0.5 - Math.random();\n  //   });\n  //   setNewPins(images)\n  // };\n\n  const getNewPins = () => {\n    axios\n      .get(\"https://josh-imageserver.herokuapp.com/image/v1/all/images\")\n      .then((response) => {\n        let images = response.data;\n        console.log(images);\n        images.sort((a, b) => {\n          return 0.5 - Math.random();\n        });\n        setNewPins(images);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    getNewPins();\n  }, []);\n  return (\n    <div className=\"app\">\n      <GlobalStyle />\n      <Header onSearch={onSearch} />\n      <GalleryS Imgdata={ImageData} pins={pins} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}